?data
y
data
colnames(data)
colnames(data)
colnames(data)
fit
w
intercept
brms_refmodel
names(brms_refmodel)
colnames(project_data)
dim(brms_refmodel$mu)
model_gp
project_data$y
names(project_data)
paste0("y.", 1)
model_gp
model_gp
load('predict_from_samples/fit_gp_100.RData')
params
params
)
params[[1]]
dim(brms_refmodel$mu)
dim(rowMeans(brms_refmodel$mu))
length(rowMeans(brms_refmodel$mu))
plot(y ~ rowMeans(brms_refmodel$mu))
relevance
S
length(fit_gp)
S <- 100
relevance
w
interactions
unlist(interactions)
sum(unlist(interactions)) / 100
w
X
load('predict_from_samples/fit_gp_100.RData')
X
w
params <- lapply(fit_gp, function(fit)
  list(sigma=fit$par[2+2]^2 + 1e-3,
       ls=sqrt(fit$par[1:2]),
       alpha=fit$par[2+1]))
relevance <- lapply(1:S, function(i)
  KL_diff_gaussian(y=brms_refmodel$mu[, i],
                   X=X,
                   alpha=params[[i]]$alpha,
                   lengthscale=params[[i]]$ls,
                   sigma=params[[i]]$sigma,
                   pointwise=FALSE))


relevance
do.call(sum, relevance)
do.call(function(i, j) i + j, relevance)


Reduce(sum, relevance, accumulate = TRUE)
relevance
as.matrix(relevance)
as.matrix(relevance)[1, 1]
as.data.frame(relevance)
dim(as.data.frame(relevance))
rowMeans(as.data.frame(relevance))
w
interactions
int <- matrix(0, 2, 2); for (i in 1:S)  int <- int + interactions[[i]]
int
int / 100
unlist(interactions)
max(unlist(interactions))
unlist(interactions) > 0.1
(unlist(interactions) >= 0.1)
sum(unlist(interactions) >= 0.1)
brms_refmodel$fit
w
intercept
int <- matrix(0, 2, 2); for (i in 1:S)  int <- int + interactions[[i]]
int
int / 100
w
brms_refmodel$family
sapply(brms_refmodel$mu, function(i) print(dim(i)))
sapply(brms_refmodel$mu, function(i) print(length(i)))
dim(brms_refmodel$mu)
sapply(1:ncol(brms_refmodel$mu), function(i) print(i))
dim(pseudo_mu)
dim(pseudo_mu)
pseudo_data(0, brms_refmodel$mu[, 1], brms_refmodel$family)
dim(pseudo_mu)
brms_refmodel$mu[, 1]
Rcpp::sourceCpp('../src/link_functions.cpp')
Rcpp::sourceCpp('../src/link_functions.cpp')
Rcpp::sourceCpp('../src/link_functions.cpp')
Rcpp::sourceCpp('../src/link_functions.cpp')
Rcpp::sourceCpp('../src/link_functions.cpp')
Rcpp::sourceCpp('../src/link_functions.cpp')
Rcpp::sourceCpp('../src/link_functions.cpp')
Rcpp::sourceCpp('../src/link_functions.cpp')
Rcpp::sourceCpp('../src/link_functions.cpp')
Rcpp::sourceCpp('../src/link_functions.cpp')
Rcpp::sourceCpp('../src/link_functions.cpp')
Rcpp::sourceCpp('../src/link_functions.cpp')
Rcpp::sourceCpp('../src/link_functions.cpp')
Rcpp::sourceCpp('../src/link_functions.cpp')
Rcpp::sourceCpp('../src/link_functions.cpp')
Rcpp::sourceCpp('../src/link_functions.cpp')
Rcpp::sourceCpp('../src/link_functions.cpp')
loadModule("link_functions", TRUE)
link_functions
trans <- new(link_functions, rep(1.0, 5))
tran
trans
trans()
trans$logit_transform
Rcpp::sourceCpp('../src/link_functions.cpp')
Rcpp::sourceCpp('../src/link_functions.cpp')
Rcpp::sourceCpp('../src/link_functions.cpp')
Rcpp::sourceCpp('../src/link_functions.cpp')
Rcpp::sourceCpp('../src/link_functions.cpp')
trans <- new(link_functions, rep(1.0, 5))
names(trans)
trans$logit_transform
trans$logit_gradient
diag(trans$logit_gradient)
trans <- new(link_functions, c(1.0, 2.0, 3.0, 4.0, 5.0))
diag(trans$logit_gradient)
trans$logit_transform
??brmsfit
??brmsfit
.has.fam.extras
devtools::load_all()
